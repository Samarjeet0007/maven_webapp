pipeline
{
	agent any	
	stages
	{
		stage('compilation:')
		{
			steps
			{
				bat 'mvn clean compile'
			}
		}

		stage('Sonar:')
		{
			steps
			{
				bat 'mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.3.0.603:sonar -Dsonar.projectKey=sonar-project -Dsonar.projectName=sonar-second-maven-proj -Dsonar.host.url=http://localhost:9000 -Dsonar.login=b805071ae25a368598777744a0a2d260e24df2b5'
			}
		}


		stage('test:')
		{
			steps
			{
				bat 'mvn test'
			}
		}
	
		stage('packaging:')
		{
			steps
			{
				bat 'mvn package'
			}
		}
		
		stage ('Artifactory_Config:') {
            steps {
                rtMavenDeployer (
                    id: "MAVEN_DEPLOYER",
                    serverId: "art",
                    releaseRepo: "libs-release-local",
                    snapshotRepo: "libs-snapshot-local"
                )
            }
        }

        stage ('Artifactory_Exec:') {
            steps {
                rtMavenRun (
                    tool: "maven_home", 
                    pom: 'pom.xml',
                    goals: 'clean package',
                    deployerId: "MAVEN_DEPLOYER",
                )
            }
        }
        stage ('Publishing:') {
            steps {
                rtPublishBuildInfo (
                    serverId: "art"
                )
            }
        }
stage('Docker:'){
	steps{	
		powershell("""
			\$username = "admin";
			echo "executed"
			\$p = "Passw0rd";
			\$combine = "\${username}:\${p}";
			\$tobyte = [System.Text.Encoding]::ASCII.GetBytes(\$combine);
			\$to64code = [System.Convert]::ToBase64String(\$tobyte);
			\$AuthValue = "Basic \$to64code";
			\$finaldata = @{ Authorization = \$AuthValue };
			wget -Headers \$finaldata -Method Get http://localhost:8081/artifactory/libs-snapshot-local/com/newjavaproj/first_java_web_app/0.0.1-SNAPSHOT/first_java_web_app-0.0.1-20200409.201708-1.war -OutFile mavenArtifact.war
		""")
	}
	}
/*
stage('git:'){	 
	steps{
		powershell ("""
			\$env:Path += "C:\\Program Files\\Git\\bin";
			git init
		""")
    	}
}
*/
stage('Docker Operation:'){
			steps{
			powershell ("""
				docker build -t mavenapp:20-4-2020 .;
				docker run -d -p 8888:8080 mavenapp:20-4-2020
			""")
			}
		}
	}
}
